name: "26F Studio Remote CI"

on:
  workflow_dispatch:
    inputs:
      payload:
        required: true
        description: |
          Payload JSON, Support parameters:
            repository:
              description: "Target repository (Owner/Repo)"
              required: true
            ref:
              description: "The branch, tag or SHA to checkout"
              required: false
              default: ""
            appName:
              description: "App name (Would be used in description files)"
              required: false
              default: "Love_App"
            buildType:
              description: "Build type (Would be used by accessing assets)"
              required: true
            buildList:
              description: "List of folders and files to be built (seperate by spaces)"
              required: false
              default: "./*"
            packageName:
              description: "Base name of the package"
              required: false
              default: "Love_App"
            versionName:
              description: "Custom name for the version"
              required: false
              default: "V0.0.1"
            versionString:
              description: "Version string (looks like 1.2.3)"
              required: false
              default: "0.0.1"
            versionCode:
              description: "Version code (looks like 123)"
              required: false
              default: "1"
            uploadArtifact:
              description: "Upload product to artifacts or not"
              required: false
              default: "true"
            provisioningProfileDeveloperIdApplication:
              description: "Provisioning profile base64 (using 'developer id application' certificate)"
              required: false
              default: ""

env:
  SOURCE_DIR: ./src/

jobs:
  check-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Display inputs
        run: |
          DISPLAY_STRING=$(cat << EOF
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          appName: ${{ fromJSON(github.event.inputs.payload).appName }}
          buildType: ${{ fromJSON(github.event.inputs.payload).buildType }}
          buildList: ${{ fromJSON(github.event.inputs.payload).buildList }}
          packageName: ${{ fromJSON(github.event.inputs.payload).packageName }}
          versionName: ${{ fromJSON(github.event.inputs.payload).versionName }}
          versionString: ${{ fromJSON(github.event.inputs.payload).versionString }}
          versionCode: ${{ fromJSON(github.event.inputs.payload).versionCode }}
          uploadArtifact: ${{ fromJSON(github.event.inputs.payload).uploadArtifact }}
          EOF
          )
          DISPLAY_STRING="${DISPLAY_STRING//'%'/'%25'}"
          DISPLAY_STRING="${DISPLAY_STRING//$'\n'/'%0A'}"
          DISPLAY_STRING="${DISPLAY_STRING//$'\r'/'%0D'}"
          echo "::notice::$DISPLAY_STRING"

  build-love:
    runs-on: ubuntu-latest
    needs: check-inputs
    env:
      PACKAGE_NAME: ./${{ fromJSON(github.event.inputs.payload).packageName }}_Bare.love
    outputs:
      download-url: ${{ steps.transfer.outputs.download-url }}
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Build love package
        if: ${{ steps.cache-love.outputs.cace-hit }} != 'true'
        uses: ./.github/actions/build-bare
        with:
          sourceDir: ${{ env.SOURCE_DIR }}
          buildList: ${{ fromJSON(github.event.inputs.payload).buildList }}
      - name: Upload love package
        uses: actions/upload-artifact@v3
        with:
          name: target_love_package
          path: ./target.love
      - name: Rename love package
        run: |
          mv ./target.love ${{ env.PACKAGE_NAME }}
      - name: Upload artifact
        if: fromJSON(github.event.inputs.payload).uploadArtifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ fromJSON(github.event.inputs.payload).packageName }}_Bare
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  auto-test:
    runs-on: ubuntu-latest
    needs: check-inputs
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Run auto tests
        uses: ./.github/actions/auto-test
        with:
          sourceDir: ${{ env.SOURCE_DIR }}

  build-windows:
    runs-on: windows-latest
    needs: build-love
    strategy:
      matrix:
        architecture: [32, 64]
    env:
      PACKAGE_NAME: ./${{ fromJSON(github.event.inputs.payload).packageName }}_Win${{ matrix.architecture }}.zip
    outputs:
      download-url-32: ${{ steps.transfer.outputs.download-url-32 }}
      download-url-64: ${{ steps.transfer.outputs.download-url-64 }}
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Download love package
        uses: actions/download-artifact@v3
        with:
          name: target_love_package
      - name: Build ${{ matrix.architecture }} bit Windows package
        uses: ./.github/actions/build-windows
        with:
          architecture: ${{ matrix.architecture }}
          sourceDir: ${{ env.SOURCE_DIR }}
          appName: ${{ fromJSON(github.event.inputs.payload).appName }}
          buildType: ${{ fromJSON(github.event.inputs.payload).buildType }}
          versionString: ${{ fromJSON(github.event.inputs.payload).versionString }}
          output: ${{ env.PACKAGE_NAME }}
      - name: Upload artifact
        if: fromJSON(github.event.inputs.payload).uploadArtifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ fromJSON(github.event.inputs.payload).packageName }}_Win${{ matrix.architecture }}
          path: ${{ env.PACKAGE_NAME }}
      - name: Get transfer
        uses: ./.github/actions/get-unzip
        with:
          url: https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_windows_amd64.zip
      - name: Upload to WeTransfer
        id: transfer
        run: |
          ./transfer.exe wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url-${{ matrix.architecture }}::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  build-linux:
    runs-on: ubuntu-latest
    needs: build-love
    env:
      PACKAGE_NAME: ./${{ fromJSON(github.event.inputs.payload).packageName }}_Linux.AppImage
    outputs:
      download-url: ${{ steps.transfer.outputs.download-url }}
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Download love package
        uses: actions/download-artifact@v3
        with:
          name: target_love_package
      - name: Build Linux package
        uses: ./.github/actions/build-linux
        with:
          sourceDir: ${{ env.SOURCE_DIR }}
          appName: ${{ fromJSON(github.event.inputs.payload).appName }}
          buildType: ${{ fromJSON(github.event.inputs.payload).buildType }}
          output: ${{ env.PACKAGE_NAME }}
      - name: Upload artifact
        if: fromJSON(github.event.inputs.payload).uploadArtifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ fromJSON(github.event.inputs.payload).packageName }}_Linux
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  build-android:
    runs-on: ubuntu-latest
    needs: build-love
    env:
      PACKAGE_NAME: ./${{ fromJSON(github.event.inputs.payload).packageName }}_Android.apk
    outputs:
      download-url: ${{ steps.transfer.outputs.download-url }}
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Download love package
        uses: actions/download-artifact@v3
        with:
          name: target_love_package
      - name: Build Android package
        uses: ./.github/actions/build-android
        with:
          sourceDir: ${{ env.SOURCE_DIR }}
          appName: ${{ fromJSON(github.event.inputs.payload).appName }}
          buildType: ${{ fromJSON(github.event.inputs.payload).buildType }}
          versionString: ${{ fromJSON(github.event.inputs.payload).versionString }}
          versionCode: ${{ fromJSON(github.event.inputs.payload).versionCode }}
          output: ${{ env.PACKAGE_NAME }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_KEYPASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEYPASSWORD }}
          ANDROID_KEYSTORE_STOREPASSWORD: ${{ secrets.ANDROID_KEYSTORE_STOREPASSWORD }}
      - name: Upload artifact
        if: fromJSON(github.event.inputs.payload).uploadArtifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ fromJSON(github.event.inputs.payload).packageName }}_Android
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          curl -sL https://git.io/file-transfer | sh 
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  build-macos-portable:
    runs-on: macos-latest
    needs: build-love
    if: fromJSON(github.event.inputs.payload).provisioningProfileDeveloperIdApplication != ''
    env:
      PACKAGE_NAME: ./${{ fromJSON(github.event.inputs.payload).packageName }}_macOS.dmg
    outputs:
      download-url: ${{ steps.transfer.outputs.download-url }}
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Clone target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(github.event.inputs.payload).repository }}
          ref: ${{ fromJSON(github.event.inputs.payload).ref }}
          submodules: "recursive"
          path: ${{ env.SOURCE_DIR }}
      - name: Download love package
        uses: actions/download-artifact@v3
        with:
          name: target_love_package
      - name: Build MacOS package
        uses: ./.github/actions/build-macos-portable
        with:
          sourceDir: ${{ env.SOURCE_DIR }}
          appName: ${{ fromJSON(github.event.inputs.payload).appName }}
          buildType: ${{ fromJSON(github.event.inputs.payload).buildType }}
          versionString: ${{ fromJSON(github.event.inputs.payload).versionString }}
          versionCode: ${{ fromJSON(github.event.inputs.payload).versionCode }}
          output: ${{ env.PACKAGE_NAME }}
          APPLE_ACCOUNT_PASSWORD: ${{ secrets.APPLE_ACCOUNT_PASSWORD }}
          APPLE_ACCOUNT_USERNAME: ${{ secrets.APPLE_ACCOUNT_USERNAME }}
          APPLE_CERT_DEVELOPER_ID_APPLICATION: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION }}
          APPLE_CERT_DEVELOPER_ID_APPLICATION_PWD: ${{ secrets.APPLE_CERT_DEVELOPER_ID_APPLICATION_PWD }}
          APPLE_PP_DEVELOPER_ID_APPLICATION: ${{ fromJSON(github.event.inputs.payload).provisioningProfileDeveloperIdApplication }}
      - name: Upload artifact
        if: fromJSON(github.event.inputs.payload).uploadArtifact == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ fromJSON(github.event.inputs.payload).packageName }}_MacOS
          path: ${{ env.PACKAGE_NAME }}
      - name: Upload to WeTransfer
        id: transfer
        run: |
          wget -qO- https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_darwin_amd64.tar.gz | tar xvz
          ./transfer wet -s -p 16 --no-progress ${{ env.PACKAGE_NAME }} 2>&1>./wetransfer.log
          echo "::set-output name=download-url::$(cat ./wetransfer.log | grep https | cut -f3 -d" ")"

  # build-iOS:
  #   runs-on: macos-latest
  #   if: (!startsWith( github.ref , 'refs/heads/ci-')) || startsWith( github.ref , 'refs/heads/ci-ios-')
  #   needs: get-info
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: 'recursive'
  #   - uses: ./.github/actions/update-version
  #     with:
  #       commit: ${{ needs.get-info.outputs.commit }}
  #       type: snapshot
  #   - uses: ./.github/actions/build-ios
  #     with:
  #       name: ${{ needs.get-info.outputs.name }}
  #       type: 'dev'
  #       APPLE_API_ID: '${{ secrets.APPLE_API_ID }}'
  #       APPLE_API_ISSUER: '${{ secrets.APPLE_API_ISSUER }}'
  #       APPLE_API_KEY: '${{ secrets.APPLE_API_KEY }}'
  #       APPLE_APP_BUILD: '${{ needs.get-info.outputs.code }}.2.${{ github.run_number }}.${{ github.run_attempt }}'
  #       APPLE_APP_CHANGELOG: '${{ github.event.commits[0].message }}'
  #       APPLE_APP_ID: '${{ secrets.APPLE_APP_ID }}'
  #       APPLE_APP_IDENTIFIER: '${{ secrets.APPLE_APP_IDENTIFIER }}'
  #       APPLE_APP_PROFILE: '${{ secrets.APPLE_APP_PROFILE }}'
  #       APPLE_KEYCHAIN_NAME: '${{ secrets.APPLE_KEYCHAIN_NAME }}'
  #       APPLE_KEYCHAIN_PWD: '${{ secrets.APPLE_KEYCHAIN_PWD }}'
  #       FASTLANE_ACTION_ID: '${{ github.run_id }}'
  #       FASTLANE_DISCORD_WEBHOOK: '${{ secrets.FASTLANE_DISCORD_WEBHOOK }}'
  #       FASTLANE_MATCH_PWD: '${{ secrets.FASTLANE_MATCH_PWD }}'
  #       FASTLANE_MATCH_TOKEN: '${{ secrets.FASTLANE_MATCH_TOKEN }}'
  #   - name: Upload
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Techmino_${{ needs.get-info.outputs.name }}_${{ needs.get-info.outputs.commit }}_#${{ GITHUB.RUN_NUMBER }}_iOS
  #       path: Techmino.ipa

  post-build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      [
        auto-test,
        build-love,
        build-windows,
        build-linux,
        build-android,
        build-macos-portable,
      ]
    steps:
      - name: Initialize CI
        uses: actions/checkout@v3
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v1
        with:
          name: target_love_package
      - name: Send Discord message
        uses: Sniddl/discord-commits@v1.3
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Remote CI result from **${{ fromJSON(github.event.inputs.payload).repository }}**."
          embed: '{
            "author":{
            "name":"${{ fromJSON(github.event.inputs.payload).appName }} [${{ fromJSON(github.event.inputs.payload).buildType }}]",
            "url":"https://github.com/${{ fromJSON(github.event.inputs.payload).repository }}"
            },
            "title":"${{ fromJSON(github.event.inputs.payload).appName }} (${{ fromJSON(github.event.inputs.payload).versionName }}) Build Result",
            "description": "CI requested from ${{ fromJSON(github.event.inputs.payload).repository }}/${{ fromJSON(github.event.inputs.payload).ref }}",
            "url":"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "thumbnail":{
            "url":"https://raw.githubusercontent.com/${{ fromJSON(github.event.inputs.payload).repository }}/${{ fromJSON(github.event.inputs.payload).ref }}/.github/build/linux/${{ fromJSON(github.event.inputs.payload).buildType }}/icon.png"
            },
            "color":36863,
            "fields":[
            {"name":"Version","value":"${{ fromJSON(github.event.inputs.payload).versionString }}","inline": true},
            {"name":"Package Name","value":"${{ fromJSON(github.event.inputs.payload).packageName }}","inline": true},
            {"name":"Status","value":"**Automatic Test:** ${{ needs.auto-test.result }}\n**Bare:** ${{ needs.build-love.result }}\n**Windows:** ${{ needs.build-windows.result }}\n**Linux:** ${{ needs.build-linux.result }}\n**Android:** ${{ needs.build-android.result }}\n**MacOS:** ${{ needs.build-macos-portable.result }}"},
            {"name":"Download Links","value":"**Bare:** ${{ needs.build-love.outputs.download-url}}\n**Windows (32 Bit):** ${{ needs.build-windows.outputs.download-url-32 }}\n**Windows (64 Bit):** ${{ needs.build-windows.outputs.download-url-64 }}\n**Linux:** ${{ needs.build-linux.outputs.download-url }}\n**Android:** ${{ needs.build-android.outputs.download-url }}\n**MacOS:** ${{ needs.build-macos-portable.outputs.download-url}}"}
            ]
            }'

  # - name: A/B Check
  #   if: ${{ envA }} != ${{ envB }}
  #   uses: actions/github-script@v3
  #   with:
  #     script: |
  #       core.setFailed('envA and envB are not equivalent!')
